{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Mappings": {
    "dev": {
      "ssmPath": { "path": "/dev/cryptoAPIKey" },
      "endpoint": { "url": "https://api.coingecko.com/api/v3/simple/price" },
      "senderEmail": { "email": "arvindbharathyn@gmail.com" },
      "functionName": { "name": "CryptoPriceAPI" },
      "tableName": { "name": "CryptoSearchDetails" },
      "indexName": { "name": "emailID-index" },
      "apiKey":{ "key": "cryptAPR25" }
    }
  },
  "Resources": {
    "CryptoSearchDetails": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": { "Fn::FindInMap": ["dev", "tableName", "name"] },
        "AttributeDefinitions": [
          {
            "AttributeName": "ID",
            "AttributeType": "S"
          },
          {
            "AttributeName": "emailID",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "ID",
            "KeyType": "HASH"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": { "Fn::FindInMap": ["dev", "indexName", "name"] },
            "KeySchema": [
              {
                "AttributeName": "emailID",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
   "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "CryptoPriceAPILambdaPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "tableAccess",
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:Query"
                  ],
                  "Resource": [
                    {"Fn::Join": ["",["arn:aws:dynamodb:",{ "Ref": "AWS::Region" },":",{ "Ref": "AWS::AccountId" },":table/",{ "Fn::FindInMap": ["dev", "tableName", "name"] }]]},
                    {"Fn::Join": ["",["arn:aws:dynamodb:",{ "Ref": "AWS::Region" },":",{ "Ref": "AWS::AccountId" },":table/",{ "Fn::FindInMap": ["dev", "tableName", "name"] },"/index/",{ "Fn::FindInMap": ["dev", "indexName", "name"] }]]}
                  ]
                },
                {
                  "Sid": "sesAccess",
                  "Effect": "Allow",
                  "Action": [
                    "ses:SendEmail"
                  ],
                  "Resource": "*"
                },
                {
                  "Sid": "ssm",
                  "Effect": "Allow",
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters",
                    "ssm:GetParametersByPath",
                    "ssm:DescribeParameters"
                  ],
                  "Resource": [
                    {"Fn::Join": ["",["arn:aws:ssm:",{ "Ref": "AWS::Region" },":",{ "Ref": "AWS::AccountId" },":parameter",{ "Fn::FindInMap": ["dev", "ssmPath", "path"] }]]},
                    {"Fn::Join": ["",["arn:aws:ssm:",{ "Ref": "AWS::Region" },":",{ "Ref": "AWS::AccountId" },":*"]]}
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CryptoAPIGW": {
      "Type": "AWS::Serverless::Api",
      "Properties": {
        "Description":"API to fetch Cryptocurrency Current Price and Search History API",
        "StageName": "dev",
        "EndpointConfiguration":{
          "Type":"REGIONAL"
        },
        "FailOnWarning": true,
        "Auth":{
          "DefaultAuthorizer":"AWS_IAM"
        }
      }
    },    
    "CryptoPriceAPI": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "index.handler",
        "FunctionName":"CryptoPriceAPI",
        "Runtime": "nodejs18.x",
        "CodeUri": "src/",
        "Environment": {
          "Variables": {
            "TableName": { "Fn::FindInMap": ["dev", "tableName", "name"] },
            "senderEmail": { "Fn::FindInMap": ["dev", "senderEmail", "email"] },
            "apiEndpoint" : { "Fn::FindInMap": ["dev", "endpoint", "url"] },
            "ssmParameterPath" : { "Fn::FindInMap": ["dev", "ssmPath", "path"] }
          }
        },
        "Role": { "Fn::GetAtt": ["LambdaRole", "Arn"] },
        "Events": {
          "PostEndpoint1": {
            "Type": "Api",
            "Properties": {
              "Path": "/currentPriceInfo",
              "Method": "post",
              "RestApiId": { "Ref": "CryptoAPIGW" }
            }
          },
          "PostEndpoint2": {
            "Type": "Api",
            "Properties": {
              "Path": "/getSearchHistory",
              "Method": "post",
              "RestApiId": { "Ref": "CryptoAPIGW" }
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "TableName": {
      "Description": "DynamoDB table name",
      "Value": {
        "Ref": "CryptoSearchDetails"
      }
    },
    "ApiEndpoint": {
      "Description": "API Gateway endpoint URL",
      "Value": {
        "Fn::Sub": "https://${CryptoAPIGW}.execute-api.${AWS::Region}.amazonaws.com/dev/"
      }
    }
  }
}